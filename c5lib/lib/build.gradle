apply plugin: 'com.android.model.library'

model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.2"

        defaultConfig.with {
            minSdkVersion.apiLevel = 15
            targetSdkVersion.apiLevel = 15
            versionCode = 1
            versionName = "1.0"
        }
    }

    android.ndk {
        moduleName = "uhf-tools"
        ldLibs.add("log")
//        ldFlags.add('-mthumb')
//        ldFlags.each {
//            println(it)
//        }
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.pro'))
        }
    }

    android.productFlavors {
        create("arm") {
            ndk.abiFilters.add("armeabi")
        }
//        create("arm7") {
//            ndk.abiFilters.add("armeabi-v7a")
//        }
//        create('all') {
//        }
    }
}

def rootDir = property('rootDir')

apply plugin: 'maven'

artifacts {
    // TODO: здесь нужно что-то более универсальное
    def coreAarFile = file("build/outputs/aar/${archivesBaseName}-arm-release.aar")
    archives coreAarFile
}

uploadArchives {
    repositories {
        mavenDeployer {
            //def rootDir = property('rootDir')
            Properties properties = new Properties()
            properties.load(new FileInputStream("${rootDir}/local.properties"))
            //def lr = '/home/koputo/localRepo'

            // TODO: настройку локального репозитория вынести в локальные конфигурационные файлы
            repository(url: "file://${properties.getProperty('localRepo')}")
            //repository(url: lr)
            pom.groupId = 'android.hardware'
            pom.artifactId = 'uhf-tools'
            pom.version = '1.0'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
}
